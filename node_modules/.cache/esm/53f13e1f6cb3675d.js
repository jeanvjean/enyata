let Router,catchErrors,Controller,createUserSchema,updateUser,Validator;_6cb‍.x([["default",()=>UserRoutes]]);_6cb‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_6cb‍.w("../utils/errorHandler",[["catchErrors",["catchErrors"],function(v){catchErrors=v}]]);_6cb‍.w("../controllers",[["*",null,function(v){Controller=v}]]);_6cb‍.w("../biz-logic",[["createUserSchema",["createUserSchema"],function(v){createUserSchema=v}],["updateUser",["updateUser"],function(v){updateUser=v}],["Validator",["Validator"],function(v){Validator=v}]]);







               function UserRoutes() {
    const router = Router();

    router.post('/create', Validator.body(createUserSchema), catchErrors(Controller.createUserController));

    router.get('/all', catchErrors(Controller.fetchUsersController));

    router.get('/:user_id', catchErrors(Controller.fetchUserController));

    router.put('/update/:user_id',Validator.body(updateUser), catchErrors(Controller.updateUserController))

    router.delete('/:user_id', catchErrors(Controller.deleteUserController));

    return router;
}